package br.com.hospital.pojo;

// Generated 08/02/2015 10:48:05 by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Medico generated by hbm2java
 */
@Entity
@Table(name = "medico", catalog = "hospital")
public class Medico implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8930758109293313494L;
	private int mediIdPessoa;
	private Pessoa pessoa;
	private Especialidade especialidade;
	private String mediIdCrm;
	private List<Agendamento> agendamentos = new ArrayList<Agendamento>();

	public Medico() {
	}

	public Medico(Pessoa pessoa, Especialidade especialidade, String mediIdCrm) {
		this.pessoa = pessoa;
		this.especialidade = especialidade;
		this.mediIdCrm = mediIdCrm;
	}

	public Medico(Pessoa pessoa, Especialidade especialidade, String mediIdCrm,
			List<Agendamento> agendamentos) {
		this.pessoa = pessoa;
		this.especialidade = especialidade;
		this.mediIdCrm = mediIdCrm;
		this.agendamentos = agendamentos;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "pessoa"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "MEDI_ID_PESSOA", unique = true, nullable = false)
	public int getMediIdPessoa() {
		return this.mediIdPessoa;
	}

	public void setMediIdPessoa(int mediIdPessoa) {
		this.mediIdPessoa = mediIdPessoa;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESPE_ID_ESPECIALIDADE", nullable = false)
	public Especialidade getEspecialidade() {
		return this.especialidade;
	}

	public void setEspecialidade(Especialidade especialidade) {
		this.especialidade = especialidade;
	}

	@Column(name = "MEDI_ID_CRM", nullable = false, length = 100)
	public String getMediIdCrm() {
		return this.mediIdCrm;
	}

	public void setMediIdCrm(String mediIdCrm) {
		this.mediIdCrm = mediIdCrm;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "medico")
	public List<Agendamento> getAgendamentos() {
		return this.agendamentos;
	}

	public void setAgendamentos(List<Agendamento> agendamentos) {
		this.agendamentos = agendamentos;
	}

}
