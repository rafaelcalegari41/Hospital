package br.com.hospital.pojo;

// Generated 08/02/2015 10:48:05 by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Paciente generated by hbm2java
 */
@Entity
@Table(name = "paciente", catalog = "hospital")
public class Paciente implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4188706004166259827L;
	private int paciIdPessoa;
	private PlanoDeSaude planoDeSaude;
	private TipoPlanoSaude tipoPlanoSaude;
	private Pessoa pessoa;
	private Date paciDtCadastro;
	private List<Agendamento> agendamentos = new ArrayList<Agendamento>();

	public Paciente() {
	}

	public Paciente(PlanoDeSaude planoDeSaude, TipoPlanoSaude tipoPlanoSaude,
			Pessoa pessoa) {
		this.planoDeSaude = planoDeSaude;
		this.tipoPlanoSaude = tipoPlanoSaude;
		this.pessoa = pessoa;
	}

	public Paciente(PlanoDeSaude planoDeSaude, TipoPlanoSaude tipoPlanoSaude,
			Pessoa pessoa, Date paciDtCadastro, List<Agendamento> agendamentos) {
		this.planoDeSaude = planoDeSaude;
		this.tipoPlanoSaude = tipoPlanoSaude;
		this.pessoa = pessoa;
		this.paciDtCadastro = paciDtCadastro;
		this.agendamentos = agendamentos;
	}

	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "pessoa"))
	@Id
	@GeneratedValue(generator = "generator")
	@Column(name = "PACI_ID_PESSOA", unique = true, nullable = false)
	public int getPaciIdPessoa() {
		return this.paciIdPessoa;
	}

	public void setPaciIdPessoa(int paciIdPessoa) {
		this.paciIdPessoa = paciIdPessoa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PACI_ID_PLANO", nullable = false)
	public PlanoDeSaude getPlanoDeSaude() {
		return this.planoDeSaude;
	}

	public void setPlanoDeSaude(PlanoDeSaude planoDeSaude) {
		this.planoDeSaude = planoDeSaude;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TIPS_ID_TIPO", nullable = false)
	public TipoPlanoSaude getTipoPlanoSaude() {
		return this.tipoPlanoSaude;
	}

	public void setTipoPlanoSaude(TipoPlanoSaude tipoPlanoSaude) {
		this.tipoPlanoSaude = tipoPlanoSaude;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public Pessoa getPessoa() {
		return this.pessoa;
	}

	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "PACI_DT_CADASTRO", length = 10)
	public Date getPaciDtCadastro() {
		return this.paciDtCadastro;
	}

	public void setPaciDtCadastro(Date paciDtCadastro) {
		this.paciDtCadastro = paciDtCadastro;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "paciente")
	public List<Agendamento> getAgendamentos() {
		return this.agendamentos;
	}

	public void setAgendamentos(List<Agendamento> agendamentos) {
		this.agendamentos = agendamentos;
	}

}
